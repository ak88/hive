// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package main

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*TransitionConfigurationV1Marshaling)(nil)

// MarshalJSON marshals as JSON.
func (t TransitionConfigurationV1) MarshalJSON() ([]byte, error) {
	type TransitionConfigurationV1 struct {
		TerminalTotalDifficulty *hexutil.Big   `json:"terminalTotalDifficulty" gencodec:"required"`
		TerminalBlockHash       *common.Hash   `json:"terminalBlockHash"       gencodec:"required"`
		TerminalBlockNumber     hexutil.Uint64 `json:"terminalBlockNumber"     gencodec:"required"`
	}
	var enc TransitionConfigurationV1
	enc.TerminalTotalDifficulty = (*hexutil.Big)(t.TerminalTotalDifficulty)
	enc.TerminalBlockHash = t.TerminalBlockHash
	enc.TerminalBlockNumber = hexutil.Uint64(t.TerminalBlockNumber)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TransitionConfigurationV1) UnmarshalJSON(input []byte) error {
	type TransitionConfigurationV1 struct {
		TerminalTotalDifficulty *hexutil.Big    `json:"terminalTotalDifficulty" gencodec:"required"`
		TerminalBlockHash       *common.Hash    `json:"terminalBlockHash"       gencodec:"required"`
		TerminalBlockNumber     *hexutil.Uint64 `json:"terminalBlockNumber"     gencodec:"required"`
	}
	var dec TransitionConfigurationV1
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.TerminalTotalDifficulty == nil {
		return errors.New("missing required field 'terminalTotalDifficulty' for TransitionConfigurationV1")
	}
	t.TerminalTotalDifficulty = (*big.Int)(dec.TerminalTotalDifficulty)
	if dec.TerminalBlockHash == nil {
		return errors.New("missing required field 'terminalBlockHash' for TransitionConfigurationV1")
	}
	t.TerminalBlockHash = dec.TerminalBlockHash
	if dec.TerminalBlockNumber == nil {
		return errors.New("missing required field 'terminalBlockNumber' for TransitionConfigurationV1")
	}
	t.TerminalBlockNumber = uint64(*dec.TerminalBlockNumber)
	return nil
}
